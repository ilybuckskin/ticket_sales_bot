from aiogram import Router, types
from aiogram.filters.command import CommandObject
from sqlalchemy.future import select

from core.database import AsyncSessionLocal
from core.models import User

router = Router()


@router.message(lambda message: message.text and "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" in message.text)
async def list_users(message: types.Message, command: CommandObject | None = None):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    async with AsyncSessionLocal() as session:
        result = await session.execute(select(User))
        users = result.scalars().all()

    if not users:
        await message.answer("‚ùå –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return

    response = "üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n"
    for user in users:
        response += f"\nüë§ {user.username or '–ë–µ–∑ –∏–º–µ–Ω–∏'} (ID: {user.telegram_id})"

    await message.answer(response)
